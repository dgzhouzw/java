package org.example.java.foundational.operator.bit;

/**
 * 按位异或运算符的使用
 *
 * @author zzw dgzzw1@163.com
 * @version 2022/12/27 17:10
 * @since JDK17
 */
public class BitXorOperator {

	public static void main(String[] args) {
		// 按位异或(^)：^左右两边的**二进制补码** 相同为0，不同为1

		/*
			按位异或的计算过程
			256 默认是四个字节的内存，在内存中的二进制补码表示为 0000 0000 0000 0000 0000 0001 0000 0000
			256 默认是四个字节的内存，在内存中的二进制补码表示为 0000 0000 0000 0000 0000 0001 0000 0000

			 0000 0000 0000 0000 0000 0001 0000 0000  ^
			 0000 0000 0000 0000 0000 0001 0000 0000  =
			 0000 0000 0000 0000 0000 0000 0000 0000  转换成十进制的原码输出结果是0
		 */
		// 256 ^ 256 = 0
		System.out.println("256 ^ 256 = " + (256 ^ 256));
	}
}

package org.example.java.foundational.operator.bit;

/**
 * 按位或的使用
 *
 * @author zzw dgzzw1@163.com
 * @version 2022/12/27 16:53
 * @since JDK17
 */
public class BitOrOperator {

	public static void main(String[] args) {
		// 按位或(|): |左右两边的二进制补码有一个为1，运算结果为1，否则就是0

		/*
			按位或的计算过程
			128 默认是四个字节的内存，在内存中的二进制补码表示为 0000 0000 0000 0000 0000 0000 1000 0000
			 64 默认是四个字节的内存，在内存中的二进制补码表示为 0000 0000 0000 0000 0000 0000 0100 0000

			 0000 0000 0000 0000 0000 0000 1000 0000  |
			 0000 0000 0000 0000 0000 0000 0100 0000  =
			 0000 0000 0000 0000 0000 0000 1100 0000  转换成十进制的原码输出结果是192
		 */
		// 128 | 64 = 192
		System.out.println("128 | 64 = " + (128 | 64));
	}
}

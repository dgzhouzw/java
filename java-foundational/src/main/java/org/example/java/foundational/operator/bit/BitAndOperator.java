package org.example.java.foundational.operator.bit;

/**
 * 按位与运算符的使用
 *
 * @author zzw dgzzw1@163.com
 * @version 2022/12/27 16:41
 * @since JDK17
 */
public class BitAndOperator {

	public static void main(String[] args) {
		// 按位与(&): &左右两边的 二进制补码都为1，运算结果为1，否则为0

		/*
			255 默认是四个字节的内存，在内存中的二进制补码表示为 0000 0000 0000 0000 0000 0000 1111 1111
			 15 默认是四个字节的内存，在内存中的二进制补码表示为 0000 0000 0000 0000 0000 0000 0000 1111

			 0000 0000 0000 0000 0000 0000 1111 1111 &
			 0000 0000 0000 0000 0000 0000 0000 1111 =
			 0000 0000 0000 0000 0000 0000 0000 1111 转换成十进制的原码输出结果是15
		 */
		// 255 & 15 = 15
		System.out.println(" 255 & 15 = " + (255 & 15));
	}
}
